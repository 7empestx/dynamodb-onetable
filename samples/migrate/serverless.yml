#
#   SenseDeep Migrate support
#
#   This configures a test DynamoDB table and hosts the Migrate Lambda proxy
#
---

service: migrate

plugins:
- serverless-dynamodb-local
- serverless-offline
- serverless-webpack

custom:
  stage: "${opt:stage, 'dev'}"

  serverless-offline:
    noPrependStageInUrl: true

  webpack:
    webpackConfig: 'webpack.config.js'
    keepOutputDirectory: true
    includeModules:
      forceInclude:
        - semver

  dynamodb:
    start:
      inMemory: true
      migrate: true
    stages: [ 'dev' ]

provider:
  name: aws
  lambdaHashingVersion: 20201221
  versionFunctions: false
  stage: "${self:custom.stage}"
  runtime: nodejs14.x
  logRetentionInDays: 14

  # Change timeout to be longer than your longest migration duration
  timeout: 15
  memorySize: 128
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    DB_TABLE: onetable-migrations
    DB_ENDPOINT: http://localhost:8000
    PROFILE: ${self:custom.stage}

  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - sts:AssumeRole
          Resource: "*"
        - Effect: "Allow"
          Action:
            - "dynamodb:DescribeTable"
            - "dynamodb:Query"
            - "dynamodb:Scan"
            - "dynamodb:GetItem"
            - "dynamodb:PutItem"
            - "dynamodb:UpdateItem"
            - "dynamodb:DeleteItem"
          Resource: "*"

package:
  individually: false

functions:
  invoke:
    handler: Migrate.handler
    timeout: 500

#
#   Create sample DynamoDB table
#
resources:
  Resources:
    MigrateTest:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: onetable-migrate
        AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
        - AttributeName: gs1pk
          AttributeType: S
        - AttributeName: gs1sk
          AttributeType: S
        KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: gs1
            KeySchema:
              - AttributeName: gs1pk
                KeyType: HASH
              - AttributeName: gs1sk
                KeyType: RANGE
            Projection:
              ProjectionType: 'ALL'
        BillingMode: PAY_PER_REQUEST
